apply from: 'gradle/scripts/helpers.gradle'

public void fnGenerateMixinJson() {
    def missingConfig = propertyStringList('mixin_configs').findAll(config -> !file("src/main/resources/${config}.json").exists())
    if (!propertyBool('generate_mixins_json') || missingConfig.empty) {
        return
    }
    def lines = """{
    "package": "",
    "required": true,
    "target": "@env(DEFAULT)",
    "minVersion": "0.8",
    "compatibilityLevel": "JAVA_8",
    "mixins": [],
    "server": [],
    "client": [],
    "injectors": {
        "defaultRequire": 1
    }
}
"""
    for (String mixinConfig : missingConfig) {
        file("src/main/resources/${mixinConfig}.json") << lines
    }
}

tasks.register('generateMixinJson') {
    group 'custom helpers'
    doLast {
        fnGenerateMixinJson()
    }
}

public void fnGenerateAccessWidenerBase() {
    File f = file("src/main/resources/${propertyString('access_widener_name')}.accesswidener")
    if (!propertyBool('generate_access_widener') || f.exists()) {
        return
    }
    def lines = """accessWidener v2 named
# Access Widener file generated by ModTemplatez

"""
    f << lines
}

tasks.register('generateAccessWidenerBase') {
    group 'custom helpers'
    doLast {
        fnGenerateAccessWidenerBase()
    }
}

ext.fnGenerateAccessWidenerBase = this.&fnGenerateAccessWidenerBase
ext.fnGenerateMixinJson = this.&fnGenerateMixinJson
